@c This is part of the GNU Octave Interval Package Manual.
@c Copyright (C) 2015 Oliver Heimlich.
@c See the file manual.texinfo for copying conditions.
@documentencoding UTF-8

The GNU Octave interval package is build upon great third-party software.

@itemize
@item
    Correctly rounded arithmetic operations are based on the GNU MPFR library @url{http://www.mpfr.org/} by Guillaume Hanrot, Vincent Lefèvre, Patrick Pélissier, Philippe Théveny and Paul Zimmermann.

@item
    A linear system solver @code{mldivide} for bare intervals is derived from a routine developed for C-XSC @url{http://www2.math.uni-wuppertal.de/~xsc/} by Martin Zimmer, Chair of Scientific Computing, University of Wuppertal, Germany.

@item
    Most unit tests are written in portable ITL format and converted into GNU Octave test cases with the Interval Testing Framework for IEEE 1788 @url{https://github.com/nehmeier/ITF1788}. The framework has been developed by Maximilian Kiesner and Marco Nehmeier, Chair of Software Engineering, Department of Computer Science, University of Würzburg, Germany.

@item
    Several unit tests are derived from libieeep1788 @url{https://github.com/nehmeier/libieeep1788}, a C++ implementation of the IEEE 1788 standard for interval arithmetic. The C++ library contains several unit tests for its IEEE 754 flavor, which is compatible with the arithmetic of the GNU Octave interval package. I have converted nearly 6000 of these test cases into portable ITL format for verification of this package.
    
    @comment libieeep1788/NOTICE
    @comment According to the Apache License, this shall be included in the documentation
    @indentedblock
    @verbatiminclude license/libieeep1788.NOTICE
    @end indentedblock

@item
    Fast matrix multiplication @code{mtimes (@var{x}, @var{y}, 'valid')} as well as the linear system solver @code{mldivide} use BLAS routines with directed rounding. An OCT-file interface for setting the rounding mode has been developed by Kai Torben Ohlus, Institute for Reliable Computing, Hamburg University of Technology, Germany.
@end itemize

Last, but not least, many thanks to everybody who has contributed to the success of free software!
