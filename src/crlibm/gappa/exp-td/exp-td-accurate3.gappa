# Gappa proof for the relative error of a polynomial approximation of exp(r)
# abs(r) \leq 2^(-12), 
# integrating the final adding step, the errors made in the polynomial approximation 
# and the argument reduction error
#
# THIS IS THE SIMPLE CASE WHERE THERE IS NO GAPPING EFFECT TO PROVE
#

# This file is part of crlibm, the correctly rounded mathematical library,
# which has been developed by the Arénaire project at École normale supérieure
# de Lyon.
#
# Copyright (C) 2004-2011 David Defour, Catherine Daramy-Loirat,
# Florent de Dinechin, Matthieu Gallet, Nicolas Gast, Christoph Quirin Lauter,
# and Jean-Michel Muller
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

#Translation of the C code

PolyAddOnehml = add_rel<138>(1,FullPolyhml);

#Mathematical definitions corresponding to the code

MExpRhml = 1 + MExpRhmlM1;

#Definition of the errors

deltaApproxExpRhml = FullPolyhml - MExpRhmlM1;
epsilonArgRed = (MExpRhml - MExpR) / MExpR;

epsilon = (PolyAddOnehml - MExpR) / MExpR;

epsilon1 = (PolyAddOnehml - MExpRhml) / MExpRhml;


#Logical implication to prove

{
deltaApproxExpRhml in [-1b-122,1b-122]
/\ FullPolyhml in [-1b-11,1b-11]
/\ epsilonArgRed in [-1b-141,1b-141]

->

   epsilon in [-1b-121,1b-121]
}

#Hints for composing the errors in the different levels

epsilon -> epsilonArgRed + epsilon1 + epsilonArgRed * epsilon1;

#Hints for computing the absolute mathematical values for the arithmetical ones

MExpRhmlM1 -> FullPolyhml - deltaApproxExpRhml;

