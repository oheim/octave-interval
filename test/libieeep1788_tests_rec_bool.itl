/*
Copyright 2013-2015 Marco Nehmeier (nehmeier@informatik.uni-wuerzburg.de)
Copyright 2015-2016 Oliver Heimlich

Original author: Marco Nehmeier (unit tests in libieeep1788,
                 original license: Apache License 2.0)
Converted into portable ITL format by Oliver Heimlich with minor corrections.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, see <http://www.gnu.org/licenses/>.
*/

testcase minimal_isCommonInterval_test {
    isCommonInterval [-27.0,-27.0] = true;
    isCommonInterval [-27.0, 0.0] = true;
    isCommonInterval [0.0,0.0] = true;
    isCommonInterval [-0.0,-0.0] = true;
    isCommonInterval [-0.0,0.0] = true;
    isCommonInterval [0.0,-0.0] = true;
    isCommonInterval [5.0, 12.4] = true;
    isCommonInterval [-0x1.FFFFFFFFFFFFFp1023, 0x1.FFFFFFFFFFFFFp1023] = true;

    isCommonInterval [entire] = false;
    isCommonInterval [empty] = false;
    isCommonInterval [-infinity, 0.0] = false;
    isCommonInterval [0.0, infinity] = false;
}

testcase minimal_isCommonInterval_dec_test {
    isCommonInterval [-27.0,-27.0]_com = true;
    isCommonInterval [-27.0, 0.0]_com = true;
    isCommonInterval [0.0,0.0]_com = true;
    isCommonInterval [-0.0,-0.0]_com = true;
    isCommonInterval [-0.0,0.0]_com = true;
    isCommonInterval [0.0,-0.0]_com = true;
    isCommonInterval [5.0, 12.4]_com = true;
    isCommonInterval [-0x1.FFFFFFFFFFFFFp1023, 0x1.FFFFFFFFFFFFFp1023]_com = true;

    isCommonInterval [-27.0,-27.0]_trv = true;
    isCommonInterval [-27.0, 0.0]_def = true;
    isCommonInterval [0.0,0.0]_dac = true;
    isCommonInterval [-0.0,-0.0]_trv = true;
    isCommonInterval [-0.0,0.0]_def = true;
    isCommonInterval [0.0,-0.0]_dac = true;
    isCommonInterval [5.0, 12.4]_def = true;
    isCommonInterval [-0x1.FFFFFFFFFFFFFp1023, 0x1.FFFFFFFFFFFFFp1023]_trv = true;

    isCommonInterval [entire]_dac = false;
    isCommonInterval [empty]_trv = false;
    isCommonInterval [empty]_trv = false;
    isCommonInterval [-infinity, 0.0]_trv = false;
    isCommonInterval [0.0, infinity]_def = false;
}

testcase minimal_isSingleton_test {
    isSingleton [-27.0,-27.0] = true;
    isSingleton [-2.0, -2.0] = true;
    isSingleton [12.0,12.0] = true;
    isSingleton [17.1, 17.1] = true;
    isSingleton [-0.0,-0.0] = true;
    isSingleton [0.0,0.0] = true;
    isSingleton [-0.0, 0.0] = true;
    isSingleton [0.0, -0.0] = true;

    isSingleton [empty] = false;
    isSingleton [entire] = false;
    isSingleton [-1.0, 0.0] = false;
    isSingleton [-1.0, -0.5] = false;
    isSingleton [1.0, 2.0] = false;
    isSingleton [-infinity,-0x1.FFFFFFFFFFFFFp1023] = false;
    isSingleton [-1.0,infinity] = false;
}

testcase minimal_isSingleton_dec_test {
    isSingleton [-27.0,-27.0]_def = true;
    isSingleton [-2.0, -2.0]_trv = true;
    isSingleton [12.0,12.0]_dac = true;
    isSingleton [17.1, 17.1]_com = true;
    isSingleton [-0.0,-0.0]_def = true;
    isSingleton [0.0,0.0]_com = true;
    isSingleton [-0.0, 0.0]_def = true;
    isSingleton [0.0, -0.0]_dac = true;

    isSingleton [empty]_trv = false;
    isSingleton [empty]_trv = false;
    isSingleton [entire]_def = false;
    isSingleton [-1.0, 0.0]_dac = false;
    isSingleton [-1.0, -0.5]_com = false;
    isSingleton [1.0, 2.0]_def = false;
    isSingleton [-infinity,-0x1.FFFFFFFFFFFFFp1023]_dac = false;
    isSingleton [-1.0,infinity]_trv = false;
}

testcase minimal_isMember_test {
    isMember -27.0 [-27.0,-27.0] = true;
    isMember -27.0 [-27.0, 0.0] = true;
    isMember -7.0 [-27.0, 0.0] = true;
    isMember 0.0 [-27.0, 0.0] = true;
    isMember -0.0 [0.0,0.0] = true;
    isMember 0.0 [0.0,0.0] = true;
    isMember 0.0 [-0.0,-0.0] = true;
    isMember 0.0 [-0.0,0.0] = true;
    isMember 0.0 [0.0,-0.0] = true;
    isMember 5.0 [5.0, 12.4] = true;
    isMember 6.3 [5.0, 12.4] = true;
    isMember 12.4 [5.0, 12.4] = true;
    isMember 0.0 [entire] = true;
    isMember 5.0 [entire] = true;
    isMember 6.3 [entire] = true;
    isMember 12.4 [entire] = true;

    isMember -71.0 [-27.0, 0.0] = false;
    isMember 0.1 [-27.0, 0.0] = false;
    isMember -0.01 [0.0,0.0] = false;
    isMember 0.000001 [0.0,0.0] = false;
    isMember 111110.0 [-0.0,-0.0] = false;
    isMember 4.9 [5.0, 12.4] = false;
    isMember -6.3 [5.0, 12.4] = false;
    isMember 0.0 [empty] = false;
    isMember -4535.3 [empty] = false;
    isMember -infinity [empty] = false;
    isMember infinity [empty] = false;
    isMember -infinity [entire] = false;
    isMember infinity [entire] = false;
}

testcase minimal_isMember_dec_test {
    isMember -27.0 [-27.0,-27.0]_trv = true;
    isMember -27.0 [-27.0, 0.0]_def = true;
    isMember -7.0 [-27.0, 0.0]_dac = true;
    isMember 0.0 [-27.0, 0.0]_com = true;
    isMember -0.0 [0.0,0.0]_trv = true;
    isMember 0.0 [0.0,0.0]_def = true;
    isMember 0.0 [-0.0,-0.0]_dac = true;
    isMember 0.0 [-0.0,0.0]_com = true;
    isMember 0.0 [0.0,-0.0]_trv = true;
    isMember 5.0 [5.0, 12.4]_def = true;
    isMember 6.3 [5.0, 12.4]_dac = true;
    isMember 12.4 [5.0, 12.4]_com = true;
    isMember 0.0 [entire]_trv = true;
    isMember 5.0 [entire]_def = true;
    isMember 6.3 [entire]_dac = true;
    isMember 12.4 [entire]_trv = true;

    isMember -71.0 [-27.0, 0.0]_trv = false;
    isMember 0.1 [-27.0, 0.0]_def = false;
    isMember -0.01 [0.0,0.0]_dac = false;
    isMember 0.000001 [0.0,0.0]_com = false;
    isMember 111110.0 [-0.0,-0.0]_trv = false;
    isMember 4.9 [5.0, 12.4]_def = false;
    isMember -6.3 [5.0, 12.4]_dac = false;
    isMember 0.0 [empty]_trv = false;
    isMember 0.0 [empty]_trv = false;
    isMember -4535.3 [empty]_trv = false;
    isMember -4535.3 [empty]_trv = false;
    isMember -infinity [empty]_trv = false;
    isMember -infinity [empty]_trv = false;
    isMember infinity [empty]_trv = false;
    isMember infinity [empty]_trv = false;
    isMember -infinity [entire]_trv = false;
    isMember infinity [entire]_def = false;
}
